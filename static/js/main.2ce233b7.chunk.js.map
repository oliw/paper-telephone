{"version":3,"sources":["model/entry.js","model/paper.js","model/game.js","styles.js","common/button.js","components/draw.js","components/write.js","common/card.js","components/summary.js","components/board.js","components/lobby/RunningGame.js","components/player.js","components/lobby/Lobby.js","components/LobbyRenderer.js","components/logo.js","components/header.js","App.js","serviceWorker.js","index.js"],"names":["Entry","number","this","writing","drawing","author","entryFilledIn","entry","paperHasCompletedEntry","paper","entryNumber","entries","length","Paper","player","numEntries","Array","fill","i","Game","name","setup","ctx","numPlayers","numberOfRounds","papers","playerIdsToPaperIdx","currentSubmissionMethod","turn","onBegin","G","onEnd","currentHand","newHand","Object","keys","forEach","playerId","previousIdx","nextIdx","endIf","every","activePlayers","all","moveLimit","stages","submit","moves","SubmitWriting","playerID","paperIndex","SubmitDrawing","minPlayers","maxPlayers","colors","sizes","styles","StyleSheet","create","main","height","borderRadius","fontWeight","borderColor","borderWidth","outline","primary","backgroundColor","color","secondary","Button","onClick","children","type","isPrimary","isSecondary","className","css","container","display","flexDirection","alignItems","canvas","buttonsContainer","Drawer","props","onImageSelected","previousPhrase","videoEl","useRef","canvasEl","useState","imageData","setImageData","useEffect","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","play","header","promptContainer","drawingContainer","ref","autoPlay","width","src","alt","getContext","drawImage","toDataURL","input","fontSize","marginBottom","Writer","onPhraseChosen","previousDrawingUri","React","setWriting","firstTime","title","prompt","placeholder","value","onChange","event","target","card","padding","borderStyle","Card","text","fontFamily","margin","WrittenEntry","first","DrawnEntry","PaperSummary","summaries","map","idx","key","Summary","game","currentPaperIdx","setCurrentPaperIdx","minHeight","position","justifyContent","paddingTop","innerContainer","flexGrow","cardContainer","marginTop","Board","_","gameover","currentPageIdx","latestEnt","slice","reverse","find","latestDrawingUri","latestWriting","details","drawingUri","mainContainer","headerContainer","headerLeft","flex","textAlign","headerMiddle","headerRight","RunningGameHeader","runningRoom","playerName","handleExitRoom","gameName","RunningGame","runningGame","rooms","room","gameID","app","credentials","icon","Player","str","hash","charCodeAt","colour","toString","substr","stringToColour","viewBox","xmlns","fillRule","d","clipRule","style","seatedPlayers","seatedPlayersLabel","marginRight","seatedPlayerIcon","gameContainer","NameChooser","onEnter","pendingPlayerName","setPlayerName","ExistingGameChooser","handleJoinRoom","handleLeaveRoom","handleStartGame","handleRequestNewGame","games","ExistingGame","players","playerSeat","p","join","playerIsSeated","freeSeat","freeSeats","filter","freeSeatsAvailable","playerCanJoin","playerCanLeave","playerCanEnter","formattedGameName","id","NewGameCreator","createGame","onDismiss","setGame","setNumPlayers","selectedGameName","gameOptions","g","matchingGame","createNumPlayersRange","Lobby","errorMsg","gameComponents","phase","handleEnterLobby","handleCreateRoom","handleExitLobby","handleRefreshRooms","showNameChooser","setShowNameChooser","showNewGameForm","setShowNewGameForm","LobbyRenderer","Logo","paddingBottom","Header","importedGames","board","App","gameServer","lobbyServer","renderer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2ce233b7.chunk.js","sourcesContent":["export class Entry {\n  constructor(number) {\n    this.number = number;\n    this.writing = null;\n    this.drawing = null;\n    this.author = null;\n  }\n}\n\nexport function entryFilledIn(entry) {\n  return entry.drawing != null || entry.writing != null;\n}\n\nexport function entryNotFilledIn(entry) {\n  return !entryFilledIn(entry);\n}\n","import { Entry, entryFilledIn, entryNotFilledIn } from \"./entry\";\n\nexport function paperHasCompletedEntry(paper, entryNumber) {\n  if (entryNumber < 0 || entryNumber >= paper.entries.length) {\n    return false;\n  }\n  return entryFilledIn(paper.entries[entryNumber]);\n}\n\nexport function unfilledEntry(paper) {\n  return paper.entries.find(entry => entryNotFilledIn(entry));\n}\n\nexport function latestEntry(paper) {\n  return paper.entries\n    .slice()\n    .reverse()\n    .find(entry => entryFilledIn(entry));\n}\n\nexport class Paper {\n  constructor(player, numEntries) {\n    this.player = player;\n    this.entries = Array(numEntries).fill(null);\n    for (let i = 0; i < numEntries; i++) {\n      this.entries[i] = new Entry(i);\n    }\n  }\n}\n","import { Paper, paperHasCompletedEntry } from \"./paper\";\n\n// TURN\nfunction OnBegin(G, ctx) {\n  G.currentSubmissionMethod = ctx.turn % 2 === 0 ? \"draw\" : \"write\";\n}\n\n// TURN\nfunction OnEnd(G, ctx) {\n  // Exchange Papers\n  const { numPlayers } = ctx;\n  const currentHand = G.playerIdsToPaperIdx;\n  const newHand = {};\n  Object.keys(currentHand).forEach(playerId => {\n    const previousIdx = currentHand[playerId];\n    const nextIdx = (numPlayers + previousIdx - 1) % numPlayers;\n    newHand[playerId] = nextIdx;\n  });\n  return {\n    ...G,\n    playerIdsToPaperIdx: newHand\n  };\n}\n\n// MOVE\nfunction SubmitWriting(G, ctx, writing, ...args) {\n  const { playerID, turn } = ctx;\n  const paperIndex = G.playerIdsToPaperIdx[playerID];\n  G.papers[paperIndex].entries[turn - 1] = {\n    ...G.papers[paperIndex].entries[turn - 1],\n    writing,\n    author: playerID\n  };\n}\n\n// MOVE\nfunction SubmitDrawing(G, ctx, drawing) {\n  const { playerID, turn } = ctx;\n  const paperIndex = G.playerIdsToPaperIdx[playerID];\n  G.papers[paperIndex].entries[turn - 1] = {\n    ...G.papers[paperIndex].entries[turn - 1],\n    drawing,\n    author: playerID\n  };\n}\n\nfunction isTurnFinished(G, ctx) {\n  // The turn is finished when every paper has a complete\n  // entry for the currentEntry\n  const { turn } = ctx;\n  return G.papers.every(paper => paperHasCompletedEntry(paper, turn - 1));\n}\n\nfunction isGameFinished(G) {\n  // The game is finished when there is a filled in entry for the Nth round\n  const { numberOfRounds, papers } = G;\n  const isFinished = papers.every(paper =>\n    paperHasCompletedEntry(paper, numberOfRounds - 1)\n  );\n\n  if (isFinished) {\n    return {};\n  }\n\n  // Not finished\n  return null;\n}\n\nexport const Game = {\n  name: \"paper-telephone\",\n\n  setup: ctx => {\n    const numPlayers = ctx.numPlayers;\n    const numberOfRounds = numPlayers;\n    const papers = Array(numPlayers);\n    const playerIdsToPaperIdx = {};\n    for (let i = 0; i < numPlayers; i++) {\n      papers[i] = new Paper(i, numberOfRounds);\n      playerIdsToPaperIdx[`${i}`] = i;\n    }\n\n    return {\n      papers: papers,\n      numberOfRounds: numberOfRounds,\n      currentSubmissionMethod: null,\n      playerIdsToPaperIdx: playerIdsToPaperIdx\n    };\n  },\n\n  turn: {\n    onBegin: OnBegin,\n    onEnd: OnEnd,\n    endIf: isTurnFinished,\n    activePlayers: { all: \"submit\", moveLimit: 1 },\n    stages: {\n      submit: {\n        moves: {\n          SubmitWriting,\n          SubmitDrawing\n        }\n      }\n    }\n  },\n\n  moves: {},\n\n  endIf: isGameFinished,\n\n  minPlayers: 2,\n  maxPlayers: 10\n};\n\nexport default Game;\n","export const colors = {\n  pinkVeryLight: \"#ffffff\",\n  pinkLight: \"#fae3d9\",\n  pinkDark: \"#ffb6b9\",\n  blueLight: \"#bbded6\",\n  blueDark: \"#8ac6d1\",\n  black: \"#1C2826\"\n};\n\nexport const sizes = {\n  cardWidth: \"750px\",\n  textLarge: \"18pt\"\n};\n","import React from \"react\";\nimport { colors } from \"styles\";\nimport { StyleSheet, css } from \"aphrodite\";\n\nconst styles = StyleSheet.create({\n  main: {\n    height: \"30px\",\n    borderRadius: \"10px\",\n    fontWeight: \"bold\",\n    borderColor: colors.blueLight,\n    borderWidth: \"2px\",\n    outline: \"none\"\n  },\n  primary: {\n    backgroundColor: colors.blueLight,\n    color: colors.pinkVeryLight\n  },\n  secondary: {\n    color: colors.blueLight\n  }\n});\n\nexport default function Button({ onClick, children, type }) {\n  const isPrimary = type === \"primary\";\n  const isSecondary = type !== \"primary\";\n\n  return (\n    <button\n      className={css(\n        styles.main,\n        isPrimary && styles.primary,\n        isSecondary && styles.secondary\n      )}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport Button from \"common/button\";\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  canvas: {\n    display: \"none\"\n  },\n  buttonsContainer: {\n    display: \"flex\"\n  }\n});\n\nfunction Drawer(props) {\n  const { onImageSelected, previousPhrase } = props;\n\n  const videoEl = useRef(null);\n  const canvasEl = useRef(null);\n\n  const [imageData, setImageData] = useState(null);\n\n  useEffect(() => {\n    if (!videoEl || imageData) {\n      return;\n    }\n    navigator.mediaDevices.getUserMedia({ video: true }).then(stream => {\n      let video = videoEl.current;\n      video.srcObject = stream;\n      video.play();\n    });\n  }, [videoEl, imageData]);\n\n  const handleTakePicClick = () => {\n    var ctx = canvasEl.current.getContext(\"2d\");\n    ctx.drawImage(\n      videoEl.current,\n      0,\n      0,\n      canvasEl.current.width,\n      canvasEl.current.height\n    );\n    setImageData(canvasEl.current.toDataURL(\"image/jpeg\"));\n  };\n\n  const handleClick = () => {\n    if (onImageSelected) {\n      onImageSelected(imageData);\n    }\n  };\n\n  return (\n    <div className={css(styles.container)}>\n      <div className={css(styles.header)}>\n        <p>Time to draw!</p>\n      </div>\n      <div className={css(styles.promptContainer)}>\n        <p>Can you draw this phrase and take a picture of it?</p>\n        <p>{previousPhrase}</p>\n      </div>\n      <div className={css(styles.drawingContainer)}>\n        {!imageData && (\n          <>\n            <video ref={videoEl} autoPlay={true}></video>\n            <canvas\n              className={css(styles.canvas)}\n              ref={canvasEl}\n              width={640}\n              height={480}\n            ></canvas>\n          </>\n        )}\n        {imageData && <img src={imageData} alt=\"Foo\" />}\n      </div>\n      <div className={css(styles.buttonsContainer)}>\n        {!imageData && (\n          <Button type=\"primary\" onClick={handleTakePicClick}>\n            Take picture\n          </Button>\n        )}\n        {imageData && (\n          <Button type=\"primary\" onClick={handleClick}>\n            Submit\n          </Button>\n        )}\n        {imageData && (\n          <Button onClick={() => setImageData(null)}>\n            Take a different picture\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Drawer;\n","import React from \"react\";\nimport { sizes } from \"styles\";\nimport Button from \"common/button\";\nimport { StyleSheet, css } from \"aphrodite\";\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  input: {\n    // height: \"200px\",\n    fontSize: sizes.textLarge,\n    marginBottom: \"10px\"\n  }\n});\n\nfunction Writer(props) {\n  const { onPhraseChosen, previousDrawingUri } = props;\n\n  const [writing, setWriting] = React.useState(\"\");\n\n  const handleWritingChange = event => {\n    setWriting(event.target.value);\n  };\n\n  const handleClick = () => {\n    onPhraseChosen(writing);\n  };\n\n  const firstTime = previousDrawingUri == null;\n\n  const firstTimeTitle = \"Lets Begin!\";\n  const guessDrawingTitle = \"Guess that phrase!\";\n  const title = firstTime ? firstTimeTitle : guessDrawingTitle;\n\n  const firstTimePrompt =\n    \"Enter a phrase that the next person will have to draw out.\";\n  const guessDrawingPrompt =\n    \"Take a look at the picture that the person before you drew. What do you think the word or phrase is?\";\n  const prompt = firstTime ? firstTimePrompt : guessDrawingPrompt;\n\n  return (\n    <div className={css(styles.container)}>\n      <p>{title}</p>\n      {previousDrawingUri && (\n        <img src={previousDrawingUri} width=\"640\" height=\"480\" alt=\"Foo\" />\n      )}\n      <p>{prompt}</p>\n      <input\n        className={css(styles.input)}\n        type=\"text\"\n        placeholder=\"Enter a phrase here\"\n        value={writing}\n        onChange={handleWritingChange}\n      />\n      <Button type=\"primary\" onClick={handleClick}>\n        Submit\n      </Button>\n    </div>\n  );\n}\n\nexport default Writer;\n","import React from \"react\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport { colors, sizes } from \"styles\";\n\nconst styles = StyleSheet.create({\n  card: {\n    width: sizes.cardWidth,\n    backgroundColor: \"white\",\n    padding: \"25px\",\n    borderWidth: \"2px\",\n    borderRadius: \"25px\",\n    borderColor: colors.blueLight,\n    borderStyle: \"solid\"\n  }\n});\n\nexport default function Card({ children }) {\n  return <div className={css(styles.card)}>{children}</div>;\n}\n","import React from \"react\";\nimport Card from \"common/card\";\nimport { colors } from \"styles\";\nimport { StyleSheet, css } from \"aphrodite\";\n\nconst styles = StyleSheet.create({\n  text: {\n    fontFamily: [\"Fredoka One\", \"cursive\"],\n    color: colors.blueLight,\n    padding: 0,\n    margin: 0\n  }\n});\n\nfunction WrittenEntry({ entry, first }) {\n  return (\n    <div>\n      <p>\n        {first ? \"First\" : \"Then\"} {entry.author} wrote\n      </p>\n      <p>{entry.writing}</p>\n    </div>\n  );\n}\n\nfunction DrawnEntry({ entry, first }) {\n  return (\n    <div>\n      <p>Then {entry.author} drew</p>\n      <img src={entry.drawing} width=\"640\" height=\"480\" alt=\"Foo\" />\n    </div>\n  );\n}\n\nfunction PaperSummary({ paper }) {\n  const { entries } = paper;\n  const summaries = entries.map((entry, idx) => {\n    if (idx % 2 === 0) {\n      return <WrittenEntry key={idx} entry={entry} first={idx == 0} />;\n    } else {\n      return <DrawnEntry key={idx} entry={entry} first={idx == 0} />;\n    }\n  });\n  return (\n    <div>\n      <p>Heres what paper looked like</p>\n      {summaries}\n    </div>\n  );\n}\n\nexport default function Summary({ game }) {\n  const [currentPaperIdx, setCurrentPaperIdx] = React.useState(0);\n  const paper = game.papers[currentPaperIdx];\n  const handleNextClick = () => {\n    setCurrentPaperIdx((currentPaperIdx + 1) % game.papers.length);\n  };\n  const handleBackClick = () => {\n    setCurrentPaperIdx(\n      (game.papers.length + currentPaperIdx - 1) % game.papers.length\n    );\n  };\n  return (\n    <div>\n      <Card>\n        <p>Its the end of the game!</p>\n        <p>Lets take a look at what everybody wrote and drew</p>\n        <button onClick={handleBackClick}>Back</button>\n        <button onClick={handleNextClick}>Next Thread</button>\n      </Card>\n      <Card>\n        <PaperSummary paper={paper} />\n      </Card>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Drawer from \"./draw\";\nimport Writer from \"./write\";\nimport Card from \"common/card\";\nimport Summary from \"components/summary\";\nimport { latestEntry } from \"../model/paper\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport { colors } from \"../styles\";\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    minHeight: \"100%\",\n    position: \"absolute\",\n    backgroundColor: colors.blueLight,\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingTop: \"15px\"\n  },\n  innerContainer: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  main: {\n    flexGrow: 1\n  },\n  cardContainer: {\n    marginTop: \"35px\"\n  }\n});\n\nfunction Board(props) {\n  const { moves, _, G, ctx, playerID } = props;\n\n  const handleSubmitWriting = writing => {\n    moves.SubmitWriting(writing);\n  };\n\n  const handleSubmitDrawing = drawingUri => {\n    moves.SubmitDrawing(drawingUri);\n  };\n\n  if (ctx.gameover) {\n    return (\n      <div className={css(styles.container)}>\n        <div className={css(styles.innerContainer)}>\n          <div className={css(styles.cardContainer)}>\n            <Summary game={G} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!playerID) {\n    return (\n      <div className={css(styles.container)}>\n        <div className={css(styles.innerContainer)}>\n          <div className={css(styles.cardContainer)}>\n            <Card>\n              <h1>Unknown Player</h1>\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const currentPageIdx = G.playerIdsToPaperIdx[playerID];\n  const currentPage = G.papers[currentPageIdx];\n  const latestEnt = latestEntry(currentPage);\n\n  let latestDrawingUri = null;\n  let latestWriting = null;\n\n  if (latestEnt && G.currentSubmissionMethod === \"write\") {\n    latestDrawingUri = latestEnt.drawing;\n  }\n\n  if (latestEnt && G.currentSubmissionMethod === \"draw\") {\n    latestWriting = latestEnt.writing;\n  }\n\n  return (\n    <div className={css(styles.container)}>\n      <div className={css(styles.innerContainer)}>\n        <div className={css(styles.cardContainer)}>\n          <Card>\n            <div className={css(styles.details)}>\n              <p>\n                The current turn is: {ctx.turn}, which means its time to:{\" \"}\n                {G.currentSubmissionMethod}\n              </p>\n              <p>\n                There are {ctx.numPlayers} players. You are player {playerID}\n              </p>\n            </div>\n          </Card>\n        </div>\n        <div className={css(styles.cardContainer)}>\n          <Card>\n            <div className={css(styles.main)}>\n              {G.currentSubmissionMethod === \"write\" &&\n                ctx.activePlayers[playerID] && (\n                  <Writer\n                    onPhraseChosen={handleSubmitWriting}\n                    previousDrawingUri={latestDrawingUri}\n                  />\n                )}\n              {G.currentSubmissionMethod === \"draw\" &&\n                ctx.activePlayers[playerID] && (\n                  <Drawer\n                    onImageSelected={handleSubmitDrawing}\n                    previousPhrase={latestWriting}\n                  />\n                )}\n              {!ctx.activePlayers[playerID] && (\n                <p>Waiting for others to finish their move</p>\n              )}\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n","import React from \"react\";\nimport { colors } from \"styles\";\nimport { StyleSheet, css } from \"aphrodite\";\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\"\n  },\n  mainContainer: {\n    flexGrow: \"1\"\n  },\n  headerContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    padding: \"3px\"\n  },\n  headerLeft: {\n    flex: 1,\n    textAlign: \"left\"\n  },\n  headerMiddle: {\n    flex: 1,\n    textAlign: \"center\"\n  },\n  headerRight: {\n    flex: 1,\n    textAlign: \"right\"\n  }\n});\n\nfunction RunningGameHeader({ runningRoom, playerName, handleExitRoom }) {\n  if (!runningRoom) {\n    return <p>Please wait</p>;\n  }\n  const gameName =\n    runningRoom.gameName === \"paper-telephone\"\n      ? \"Paper Telephone\"\n      : \"Unknown Game\";\n  const exitGame = () => {\n    handleExitRoom();\n  };\n  return (\n    <div className={css(styles.headerContainer)}>\n      <div className={css(styles.headerLeft)}>\n        <button onClick={exitGame}>Leave and return to Lobby</button>\n      </div>\n      <div className={css(styles.headerMiddle)}>Now playing: {gameName}</div>\n      <div className={css(styles.headerRight)}>Playing as: {playerName}</div>\n    </div>\n  );\n}\n\nexport default function RunningGame(props) {\n  const { runningGame, rooms, playerName, handleExitRoom } = props;\n  const runningRoom = rooms.find(room => room.gameID === runningGame.gameID);\n  return (\n    <div>\n      <RunningGameHeader\n        runningGame={runningGame}\n        runningRoom={runningRoom}\n        playerName={playerName}\n        handleExitRoom={handleExitRoom}\n      />\n      <runningGame.app\n        gameID={runningGame.gameID}\n        playerID={runningGame.playerID}\n        credentials={runningGame.credentials}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { colors } from \"styles\";\nimport { StyleSheet, css } from \"aphrodite\";\n\nconst styles = StyleSheet.create({\n  container: {\n    textAlign: \"center\"\n  },\n  icon: {},\n  text: {\n    padding: 0,\n    margin: 0\n  }\n});\n\nconst stringToColour = function(str) {\n  var hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  var colour = \"#\";\n  for (let i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 0xff;\n    colour += (\"00\" + value.toString(16)).substr(-2);\n  }\n  return colour;\n};\n\nexport default function Player({ name }) {\n  const color = stringToColour(name);\n  return (\n    <div className={css(styles.container)}>\n      <svg\n        className={css(styles.icon)}\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 16 16\"\n        fill={color}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 100-6 3 3 0 000 6z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n      <p className={css(styles.text)} style={{ color: `${color}` }}>\n        {name}\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { colors } from \"styles\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport Card from \"common/card\";\nimport Player from \"components/player\";\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  mainContainer: {\n    flexGrow: \"1\",\n    width: \"100%\",\n    minHeight: \"100%\",\n    backgroundColor: colors.blueLight,\n    paddingTop: \"15px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  seatedPlayers: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  seatedPlayersLabel: {\n    marginRight: \"10px\"\n  },\n  seatedPlayerIcon: {\n    marginRight: \"10px\"\n  },\n  game: {\n    borderRadius: \"10px\",\n    borderStyle: \"solid\",\n    borderColor: colors.blueLight,\n    borderWidth: \"2px\",\n    padding: \"10px\"\n  },\n  gameContainer: {\n    marginBottom: \"10px\"\n  }\n});\n\nfunction NameChooser({ onEnter }) {\n  const [pendingPlayerName, setPlayerName] = React.useState(\"\");\n\n  const handleInputChange = event => {\n    setPlayerName(event.target.value);\n  };\n\n  const onClickEnter = () => {\n    if (pendingPlayerName === \"\") return;\n    setPlayerName(\"\");\n    onEnter(pendingPlayerName);\n  };\n\n  return (\n    <div>\n      <p>Choose a player name:</p>\n      <input\n        type=\"text\"\n        value={pendingPlayerName}\n        onChange={handleInputChange}\n      />\n      <span className=\"buttons\">\n        <button className=\"buttons\" onClick={onClickEnter}>\n          Enter\n        </button>\n      </span>\n    </div>\n  );\n}\n\nfunction ExistingGameChooser({\n  rooms,\n  playerName,\n  handleJoinRoom,\n  handleLeaveRoom,\n  handleStartGame,\n  handleRequestNewGame\n}) {\n  const games = rooms.map(room => (\n    <div key={room.gameID} className={css(styles.gameContainer)}>\n      <ExistingGame\n        room={room}\n        playerName={playerName}\n        handleJoinRoom={handleJoinRoom}\n        handleLeaveRoom={handleLeaveRoom}\n        handleStartGame={handleStartGame}\n      />\n    </div>\n  ));\n  return (\n    <div>\n      <p>Choose from {rooms.length} existing games</p>\n      {games}\n      <p>\n        Or..Don't see a game to join?{\" \"}\n        <button onClick={handleRequestNewGame}>Host a new game</button>\n      </p>\n    </div>\n  );\n}\n\nfunction ExistingGame({\n  room,\n  playerName,\n  handleJoinRoom,\n  handleLeaveRoom,\n  handleStartGame\n}) {\n  const { gameID, gameName, players } = room;\n  const playerNames = players.map(p => p.name).join(\",\");\n  const playerSeat = players.find(p => p.name === playerName);\n  const playerIsSeated = playerSeat != null;\n  const freeSeat = players.find(p => !p.name);\n  const freeSeats = players.filter(p => !p.name);\n  const freeSeatsAvailable = freeSeat != null;\n  const gameIsFullySeated = !freeSeatsAvailable;\n  const playerCanJoin = !playerIsSeated && freeSeatsAvailable;\n  const playerCanLeave = playerIsSeated;\n  const playerCanEnter = playerIsSeated && gameIsFullySeated;\n\n  const startGame = () => {\n    handleStartGame(gameName, {\n      gameID: gameID,\n      playerID: \"\" + playerSeat.id,\n      numPlayers: players.length\n    });\n  };\n\n  const joinGame = () => {\n    handleJoinRoom(gameName, gameID, \"\" + freeSeat.id);\n  };\n\n  const leaveGame = () => {\n    handleLeaveRoom(gameName, gameID);\n  };\n\n  const seatedPlayers = players\n    .map(p => p.name)\n    .filter(name => name != null)\n    .map(name => (\n      <div className={css(styles.seatedPlayerIcon)}>\n        <Player name={name} key={name} />\n      </div>\n    ));\n\n  const formattedGameName =\n    gameName === \"paper-telephone\" ? \"Telephone\" : \"Unknown Game\";\n\n  return (\n    <div className={css(styles.game)}>\n      <p>{formattedGameName}</p>\n      <div className={css(styles.seatedPlayers)}>\n        <p className={css(styles.seatedPlayersLabel)}>Players:</p>\n        {seatedPlayers}\n      </div>\n      {freeSeatsAvailable && (\n        <p>Waiting for {freeSeats.length} more players to take a seat</p>\n      )}\n      {playerCanJoin && <button onClick={joinGame}>Take a Seat</button>}\n      {playerCanEnter && (\n        <div>\n          <p>Everyone is sat down!</p>\n          <button onClick={startGame}>Enter the game</button>\n        </div>\n      )}\n      {playerCanLeave && <button onClick={leaveGame}>Leave</button>}\n    </div>\n  );\n}\n\nfunction NewGameCreator({ games, createGame, onDismiss }) {\n  const [game, setGame] = React.useState(games[0]);\n  const [numPlayers, setNumPlayers] = React.useState(2);\n\n  const selectedGameName = game ? game.game.name : \"--\";\n\n  const gameOptions = games.map(g => (\n    <option key={g.game.name} value={g.game.name}>\n      {g.game.name}\n    </option>\n  ));\n\n  const onClick = () => {\n    createGame(selectedGameName, numPlayers);\n    onDismiss();\n  };\n\n  const onGameSelected = event => {\n    const name = event.target.value;\n    if (name === \"\") {\n      setGame(null);\n      return;\n    }\n    const matchingGame = games.find(g => g.game.name === name);\n    setGame(matchingGame);\n  };\n\n  const onNumPlayersSelected = event => {\n    const numPlayers = event.target.value;\n    setNumPlayers(numPlayers);\n  };\n\n  const createNumPlayersOption = idx => {\n    return (\n      <option key={\"num-option-\" + idx} value={idx}>\n        {idx}\n      </option>\n    );\n  };\n\n  const createNumPlayersRange = game => {\n    return [...new Array(game.game.maxPlayers + 1).keys()].slice(\n      game.game.minPlayers\n    );\n  };\n\n  return (\n    <div>\n      <p>Lets create a new game</p>\n      <p>Which game do you want to play?</p>\n      <select value={selectedGameName} onChange={onGameSelected}>\n        <option value=\"\">Select Game</option>\n        {gameOptions}\n      </select>\n      <p>And how many players?</p>\n      <select value={numPlayers} onChange={onNumPlayersSelected}>\n        {createNumPlayersRange(game).map(createNumPlayersOption)}\n      </select>\n      <button onClick={onClick}>Create</button>\n    </div>\n  );\n}\n\nexport default function Lobby(props) {\n  const {\n    errorMsg,\n    gameComponents,\n    rooms,\n    phase,\n    playerName,\n    runningGame,\n    handleEnterLobby,\n    handleExitLobby,\n    handleCreateRoom,\n    handleJoinRoom,\n    handleLeaveRoom,\n    handleExitRoom,\n    handleRefreshRooms,\n    handleStartGame\n  } = props;\n\n  const [showNameChooser, setShowNameChooser] = React.useState(\n    playerName == null\n  );\n\n  const [showNewGameForm, setShowNewGameForm] = React.useState(false);\n\n  const handleNameChosen = name => {\n    setShowNameChooser(false);\n    handleEnterLobby(name);\n  };\n\n  return (\n    <div className={css(styles.container)}>\n      <div className={css(styles.mainContainer)}>\n        <Card>\n          <p>Hi {playerName || \"\"}, Welcome to the Paper Gamer Lobby!</p>\n          {!showNameChooser && (\n            <button onClick={() => setShowNameChooser(true)}>\n              Change Name\n            </button>\n          )}\n          {showNameChooser && <NameChooser onEnter={handleNameChosen} />}\n        </Card>\n        <Card>\n          <ExistingGameChooser\n            rooms={rooms}\n            playerName={playerName}\n            handleJoinRoom={handleJoinRoom}\n            handleLeaveRoom={handleLeaveRoom}\n            handleStartGame={handleStartGame}\n            handleRequestNewGame={() => setShowNewGameForm(true)}\n          />\n        </Card>\n        {showNewGameForm && (\n          <Card>\n            <NewGameCreator\n              games={gameComponents}\n              createGame={handleCreateRoom}\n              onDismiss={() => setShowNewGameForm(false)}\n            />\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport RunningGame from \"components/lobby/RunningGame\";\nimport Lobby from \"components/lobby/Lobby\";\nimport { StyleSheet, css } from \"aphrodite\";\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\"\n  }\n});\n\nexport default function LobbyRenderer(props) {\n  const { runningGame } = props;\n  return (\n    <div className={css(styles.container)}>\n      {runningGame && <RunningGame {...props} />}\n      {!runningGame && <Lobby {...props} />}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { colors } from \"styles\";\nimport { StyleSheet, css } from \"aphrodite\";\n\nconst styles = StyleSheet.create({\n  text: {\n    fontFamily: [\"Fredoka One\", \"cursive\"],\n    color: colors.blueLight,\n    padding: 0,\n    margin: 0\n  }\n});\n\nexport default function Logo() {\n  return (\n    <div>\n      <h1 className={css(styles.text)}>Paper Gamer</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Logo from \"components/logo\";\nimport { colors } from \"styles\";\n\nimport { StyleSheet, css } from \"aphrodite\";\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingTop: \"4px\",\n    paddingBottom: \"4px\",\n    backgroundColor: colors.pinkVeryLight\n  }\n});\n\nfunction Header() {\n  return (\n    <div className={css(styles.container)}>\n      <Logo />\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Game from \"model/game\";\nimport Board from \"components/board\";\nimport LobbyRenderer from \"components/LobbyRenderer\";\nimport Header from \"components/header\";\nimport { Lobby, Client } from \"boardgame.io/react\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport { colors } from \"./styles\";\n\nconst styles = StyleSheet.create({\n  container: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  header: {},\n  main: {\n    flexGrow: 1,\n    display: \"relative\"\n  }\n});\n\nconst importedGames = [\n  {\n    game: Game,\n    board: Board\n  }\n];\n\n// let BoardGameIo = null;\n// if (process.env.NODE_ENV === \"development\") {\n//   BoardGameIo = Client({\n//     game: Game,\n//     board: Board\n//   });\n// } else {\n//   BoardGameIo = () => (\n//     <Lobby\n//       gameServer={`https://games-server.oliverwilkie.com`}\n//       lobbyServer={`https://games-server.oliverwilkie.com`}\n//       gameComponents={importedGames}\n//     />\n//   );\n// }\n\nfunction App() {\n  return (\n    <div className={css(styles.container)}>\n      <div className={css(styles.header)}>\n        <Header />\n      </div>\n      <div className={css(styles.main)}>\n        {/* <BoardGameIo /> */}\n        <Lobby\n          gameServer={`https://games-server.oliverwilkie.com`}\n          lobbyServer={`https://games-server.oliverwilkie.com`}\n          gameComponents={importedGames}\n          renderer={LobbyRenderer}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}